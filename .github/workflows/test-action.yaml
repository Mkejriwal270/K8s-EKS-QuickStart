name: "Test-Action"
on:
  workflow_dispatch:
     inputs:
      vpc_exists:
        description: 'Are you using an existing VPC? (true/false)'
        required: true

jobs:
  get_value:
      runs-on: ubuntu-latest
      steps:
        - name: Get value
          run: echo ${{ github.events.inputs.vpc_exists}}
          
        - name: Get value if true string
          run: echo ${{ github.events.inputs.vpc_exists}}
          if : ${{ github.events.inputs.vpc_exists == 'true' }}
          
        - name: Get value if true
          run: echo ${{ github.events.inputs.vpc_exists}}
          if: ${{ github.events.inputs.vpc_exists }}
          
        - name: Get value if fase
          run: echo ${{ github.events.inputs.vpc_exists}}
          if: ${{ github.events.inputs.vpc_exists == 'false' }}
        
        - name: Get value if fase
          run: echo ${{ github.events.inputs.vpc_exists}}
          if: ${{ !(github.events.inputs.vpc_exists) }}
          
  helm_install:
    name: "Test Action"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/ExistingVPC
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        
      - name: Print json values
        run: cat terraform.tfstate | jq -r '.serial'
        
      - name: Get user details
        run: |
           userarn=`aws sts get-caller-identity --output json | jq -r '.Arn'`
           username=${userarn#*/}
           echo $username
           JSON_STRING=$( jq -n \
                  --arg ua "$userarn" \
                  --arg un "$username" \
                  '{userarn: $ua, username: $un, groups: ["system:masters"]}' )
           echo $JSON_STRING
           map_users=[$JSON_STRING]
           echo $map_users
